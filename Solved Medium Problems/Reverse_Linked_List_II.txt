/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode reverseBetween(ListNode head, int m, int n) {
        ListNode dummy = new ListNode(0);
        dummy.next = head;
        ListNode current = dummy;
        for (int i = 0; i < m - 1; i++) {
            current = current.next;
        }
        ListNode mNodePrev = current;
        ArrayDeque<ListNode> stack = new ArrayDeque<ListNode>();
        for (int i = 0; i <= n - m; i++) {
            current = current.next;
            stack.push(current);
        }
        ListNode nNode = current.next;
        
        ListNode node = mNodePrev;
        while (!stack.isEmpty()) {
            node.next = stack.pop();
            node = node.next;
        }
        node.next = nNode;
        return dummy.next;
    }
}