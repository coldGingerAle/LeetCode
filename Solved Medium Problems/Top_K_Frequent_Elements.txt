class Solution {
    
    private class Pair implements Comparable<Pair> {
        int val;
        int count;
        public Pair(int val, int count) {
            this.val = val;
            this.count = count;
        }
        public int compareTo(Pair other) {
            return other.count - count;
        }
    }
    
    public List<Integer> topKFrequent(int[] nums, int k) {
        HashMap<Integer, Integer> hm = new HashMap<Integer, Integer>();
        for (int i : nums) {
            if (hm.containsKey(i)) {
                int val = (Integer)hm.get(i);
                hm.put(i, val + 1);
            } else {
                hm.put(i, 1);
            }
        }
        ArrayList<Pair> list = new ArrayList<Pair>();
        for (Map.Entry m : hm.entrySet()) {
            int val = (Integer)m.getKey();
            int count = (Integer)m.getValue();
            list.add(new Pair(val, count));
        }
        Collections.sort(list);
        ArrayList<Integer> answer = new ArrayList<Integer>();
        for (int i = 0; i < k; i++) {
            answer.add(list.get(i).val);
        }
        return answer;
    }
}