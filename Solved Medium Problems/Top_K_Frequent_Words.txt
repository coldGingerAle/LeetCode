class Solution {
    
    private class Pair implements Comparable<Pair> {
        String word;
        int count;
        public Pair(String word, int count) {
            this.word = word;
            this.count = count;
        }
        public int compareTo(Pair other) {
            if (other.count - count == 0) return word.compareTo(other.word);
            return other.count - count;
        }
    }
    
    public List<String> topKFrequent(String[] words, int k) {
        HashMap<String, Integer> hm = new HashMap<String, Integer>();
        for (String s : words) {
            if (hm.containsKey(s)) {
                Integer val = (Integer)hm.get(s);
                hm.put(s, val + 1);
            } else {
                hm.put(s, 1);
            }
        }
        
        ArrayList<Pair> list = new ArrayList<Pair>();
        for (Map.Entry m : hm.entrySet()) {
            String key = (String)m.getKey();
            int val = (Integer)m.getValue();
            list.add(new Pair(key, val));
        }
        
        Collections.sort(list);
        
        ArrayList<String> answer = new ArrayList<String>();
        for (int i = 0; i < k; i++) {
            answer.add(list.get(i).word);
        }
        return answer;
    }
    
}